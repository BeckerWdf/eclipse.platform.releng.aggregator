<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1"><META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css"><LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css"><title>Running Eclipse</title></head><BODY BGCOLOR="#ffffff"><h1>Running Eclipse</h1><p>After installing (unzipping) the Eclipse install into a directory (e.g., c:\eclipse),the workbench is started by running the Eclipse executable found in thetop-level install directory.&nbsp; The file is <tt>eclipse.exe</tt> on Windowssystems and simply <tt>eclipse</tt> on Linux systems. Note, the followingdiscussion details the setup on Windows systems.&nbsp; The Linux setup isanalogous. </p><p>If you don't specify differently, the platform creates a default workspacedirectory as a sibling of the executable (e.g., c:\eclipse\workspace).&nbsp;This workspace directory is used as the default content area for your projectsas well as for holding any required metadata.&nbsp; For shared ormulti-workspace installs you should explicitly state the location of yourworkspace rather than using the default.&nbsp; There are two ways to control thelocation of your workspace; using the current working directory or using the-data command line argument.</p><p>Perhaps the easiest way of using the current working directory is to create ashortcut using the following steps:</p><ol>  <li>Navigate to eclipse.exe in the Windows Explorer and using a right button drag, create a shortcut    to eclipse.exe.</li>  <li>Edit the properties of the shortcut such that the &quot;Start in:&quot;    box identifies the location of your workspace (e.g., c:\myworkspace).</li>  <li>Close the properties dialog and double-click on the shortcut.</li></ol><p>Of course you can get the same effect using a command prompt by changingdirectory to your workspace directory and then running eclipse.exe.</p><p>To use the -data command line argument, simply add <tt>-data &lt;your workspacelocation&gt;</tt> (e.g., -data c:\myworkspace)to the &quot;Target:&quot; line in the shortcut or include it explicitly on yourcommand prompt command line.&nbsp;</p><h2>Advanced topics in running Eclipse </h2><p>The Eclipse executable and the platform itself offers a number of executionoptions of interest to people developing or debugging parts of Eclipse.&nbsp;The general form of running the Eclipse executable is:</p><blockquote><p><tt>eclipse [platform options] [-vmargs [Java VM arguments]]</tt></p></blockquote><TABLE width="90%" border=1 height="543">  <TBODY>    <tr>       <TD width="33%">         <pre><code><b>-configuration</b> (<i>configurationFileURL</i> | 	  <b>common</b> | <b>user.home</b> | <b>user.dir</b>)</code></pre></TD>      <TD width="65%">The location for the Eclipse Platform configuration file,         expressed as a URL or special value. The configuration file determines         the location of the Eclipse platform, the set of available plug-ins, and         the primary feature. [Relative URLs are interpreted relative to ?]. Note         that the configuration file is written to here when the Eclipse Platform         is installed or updated. <br>&nbsp;<br>        The special values are used to locate the standard configuration file:           &quot;<code> common</code>&quot; means look for &quot;<code>install/platform.cfg</code>&quot;           relative to the location of the Eclipse Platform launcher (i.e., &quot;install&quot;           sibling of &quot;startup.jar&quot;);&nbsp; &quot;<code>user.home</code>&quot;           means look for &quot;<code>eclipse/install/platform.cfg</code>&quot;           as a child of the prevailing value of the Java &quot;<code>user.home</code>&quot;           property; and &quot;<code>user.dir</code>&quot; means look for &quot;<code>eclipse/install/platform.cfg</code>&quot;           as a child of the prevailing value of the Java &quot;<code>user.dir</code>&quot;           property.</TD>      <TD width="2%">2.0</TD>    </tr>    <tr>       <TD vAlign=top width="33%"><PRE><b>-data</b> <i>workspacePath</i></PRE></TD>      <TD width="65%">The path of the workspace on which to run the Eclipse Platform.         The workspace location is also the default location for projects. Relative         paths are interpreted relative to the directory that eclipse was started         from.</TD>      <TD width="2%">1.0</TD>    </tr>    <tr>       <TD vAlign=top width="33%"><PRE><b>-dev</b> [<i>classpathEntries</i>]</PRE></TD>      <TD width="65%">Puts the platform in development mode.&nbsp; The optional         classpath entries (a comma-separated list) are added to the runtime classpath         of each plug-in. For example, when the workspace contains plug-ins being         developed, specifying&nbsp; &quot;<code>-dev bin</code>&quot; adds a classpath         entry for each plug-in project's directory named &quot;<code>bin</code>&quot;,         allowing freshly-generated class files to be found there.&nbsp; Redundant         or non-existent classpath entries are eliminated.</TD>      <TD width="2%">1.0</TD>    </tr>    <tr>       <TD vAlign=top width="33%"><pre><code><b>-feature</b> <i>featureId</i></code></pre></TD>      <TD width="65%" height="16">The id of the primary feature. The primary feature         gives the launched instance of Eclipse its product personality, and determines         the product customization information used.</TD>      <TD width="2%" height="16">2.0</TD>    </tr>    <tr>       <TD vAlign=top width="33%"><pre><code><b>-plugincustomization</b>	  <i>propertiesFile</i></code></pre></TD>      <TD width="65%">The location of a properties file containing default settings         for plug-in preferences. These default settings override default settings         specified in the primary feature. Relative paths are interpreted relative         to the directory that eclipse was started from.</TD>      <TD width="2%">2.0</TD>    </tr>    <tr>       <TD vAlign=top width="33%"><PRE><b>-vm</b> <i>vmPath</i></PRE></TD>      <TD width="65%">The location of Java Runtime Environment (JRE) to use to         run the Eclipse Platform. If not specified, the JRE is at &quot;<code>jre</code>&quot;         sibling of the Eclipse executable. Relative paths are interpreted relative         to the directory that eclipse was started from.</TD>      <TD width="2%">1.0</TD>    </tr>    <TR>       <TD vAlign=top width="33%"><PRE><b>-application</b> <i>applicationId</i></PRE></TD>      <TD width="65%">The application to run. Applications are declared by plug-ins         supplying extensions to the org.eclipse.core.runtime.applications extension         point. This argument is typically not needed. If specified, the value         overrides the value supplied by the configuration. If not specified, the         Eclipse workbench is run.</TD>      <TD width="2%">1.0</TD>    </TR>    <TR>       <TD vAlign=top width="33%"><PRE><b>-boot</b> <i>bootJarURL</i></PRE></TD>      <TD width="65%"><i>(Deprecated; replaced by -configuration;         supported for 1.0 compatibility) </i>The location of the Eclipse Platform's         boot plug-in code (i.e., boot.jar) expressed as a URL. If specified, it         is used to set the classpath for the class loader that loads the Eclipse         Platform bootstrap class loader. Only required when changing the relative         location of startup.jar and boot.jar.&nbsp;[Relative URLs are interpreted         relative to ?].</TD>      <TD width="2%">*1.0</TD>    </TR>    <TR>       <TD vAlign=top width="33%"><PRE><b>-consolelog</b></PRE></TD>      <TD width="65%">Mirrors the Eclipse Platform's error log to the console         used to run Eclipse. Handy when combined with <code> -debug</code>.</TD>      <TD width="2%">1.0</TD>    </TR>    <TR>       <TD vAlign=top width="33%"><PRE><b>-debug</b> [<i>optionsFileURL</i>]</PRE></TD>      <TD width="65%"> Puts the platform in debug mode, and loads the debug options         from the file at the given URL if specified. This file indicates what         debug points are available for a plug-in and whether or not they are enabled.         If a file path is not given, the platform looks in the directory that         eclipse was started from for a file called ".options". [Relative to what?]</TD>      <TD width="2%">1.0</TD>    </TR>    <TR>       <TD vAlign=top width="33%"><pre><code><b>-keyring</b> <i>keyringFilePath</i></code></pre></TD>      <TD width="65%"> The location of the authorization database (or &quot;key         ring&quot; file) on disk. This argument has to be used in conjunction         with the <code> -password</code> option. Relative paths are interpreted         relative to the directory that eclipse was started from.</TD>      <TD width="2%">1.0</TD>    </TR>    <TR>       <TD vAlign=top width="33%"><pre><code><b>-password</b> <i>password</i></code></pre></TD>      <TD width="65%">The password for the authorization database. Used in conjunction         with the <code>-keyring</code> option.</TD>      <TD width="2%">1.0</TD>    </TR>    <TR>       <TD vAlign=top width="33%" height="16"><pre><code><b>-plugins</b> <i>pluginsFileURL</i></code></pre></TD>      <TD width="65%" height="16"><i>(Deprecated; replaced by -configuration;         supported for 1.0 compatibility) </i>The location of the file that specifies         where the Eclipse Platform finds plug-ins, expressed as a URL. The file         is in property file format where the keys are arbitrary user-defined names         and the values are comma- separated lists of either (a) explicit paths         to plugin.xml files, or (b) paths to directories containing plug-ins.         [Relative URLs are interpreted relative to ?]. If specified, this option         causes the creation of a suitable temporary configuration.</TD>      <TD width="2%" height="16">*1.0</TD>    </TR>    <TR>       <TD vAlign=top width="33%" height="16"><pre><code><b>-showsplash</b> <i>params</i></code></pre></TD>      <TD width="65%" height="16">Internal option for showing the splash screen         (done by the executable Eclipse Platform launcher). This option has         different syntax and semantics at various points along the splash screen         processing chain.</TD>      <TD width="2%" height="16">2.0</TD>    </TR>    <TR>       <TD vAlign=top width="33%" height="16"><pre><code><b>-endsplash</b> <i>params</i></code></pre></TD>      <TD width="65%" height="16">Internal option for taking down the splash screen         when the Eclipse Platform is up and running. This option has different         syntax and semantics at various points along the splash screen processing         chain.</TD>      <TD width="2%" height="16">2.0</TD>    </TR>    <tr>       <TD vAlign=top width="33%"><PRE><b>-nosplash</b></PRE></TD>      <TD width="65%">Runs the platform without putting up the splash screen.</TD>      <TD width="2%">1.0</TD>    </tr>    <TR>       <TD vAlign=top width="33%"><pre><code><b>-noregistrycache</b></code></pre></TD>      <TD width="65%">Bypasses the reading and writing of an internal plug-in         registry cache file.</TD>      <TD width="2%">2.0</TD>    </TR>    <tr>       <TD vAlign=top width="33%"><PRE><b>-os</b> <i>operatingSystem</i></PRE></TD>      <TD width="65%">Defines the operating system on which the Eclipse Platform         is running. The Eclipse Platform ordinarily computes the optimal setting         using the prevailing value of Java &quot;<code>os.name</code>&quot; property.         If specified here, this is the value that the Eclipse Platform uses. The         value specified here is available to plug-ins as BootLoader.getOS(), and         used to resolve occurrences of the &quot;$os$&quot; variable in paths         mentioned in the plug-in manifest file. Example values: "win32", &quot;linux&quot;,         &quot;hpux&quot;, &quot;solaris&quot;, &quot;aix&quot;.</TD>      <TD width="2%">1.0</TD>    </tr>    <tr>       <TD vAlign=top width="33%"><PRE><b>-ws</b> <i>windowSystem</i></PRE></TD>      <TD width="65%">Defines the window system on which the Eclipse Platform         is running. The Eclipse Platform ordinarily computes the optimal setting         using the prevailing value of Java &quot;<code>os.name</code>&quot; property.         If specified here, this is the value that the Eclipse Platform uses. The         value specified here is available to plug-ins as BootLoader.getWS(), used         to configure SWT, and used to resolve occurrences of the &quot;$ws$&quot;         variable in paths mentioned in the plug-in manifest file. Example values:         "win32", "motif", &quot;gtk&quot;.</TD>      <TD width="2%">1.0</TD>    </tr>    <tr>       <TD vAlign=top width="33%"><pre><code><b>-arch</b> <i>architecture</i></code></pre></TD>      <TD width="65%">Defines the processor architecture on which the Eclipse         Platform is running. The Eclipse Platform ordinarily computes the optimal         setting using the prevailing value of Java &quot;<code>os.arch</code>&quot;         property. If specified here, this is the value that the Eclipse Platform         uses. The value specified here is available to plug-ins as BootLoader.getOSArch().         Example values: "x86", &quot;sparc&quot;, "PA-RISC", &quot;ppc&quot;.</TD>      <TD width="2%">2.0</TD>    </tr>    <tr>       <TD vAlign=top width="33%"><pre><code><b>-nl</b> <i>locale</i></code></pre></TD>      <TD width="65%">Defines the name of the locale on which the Eclipse Platform         is running. The Eclipse Platform ordinarily computes the optimal setting         automatically. If specified here, this is the value that the Eclipse Platform         uses. The value specified here is available to plug-ins as BootLoader.getNL().         Example values: &quot;en_US&quot; and &quot;fr_FR_EURO&quot;.</TD>      <TD width="2%">2.0</TD>    </tr>  </TBODY></TABLE><p>All arguments following (but not including) the -vmargs entry are passeddirectly through to the indicated Java VM as virtual machine arguments (i.e.,before the class to run).</p><h2>Running on Different VMs&nbsp;</h2><h3>Running Eclipse on J9</h3><p>When running Eclipse on J9 version 1.5, it is recommended that you use the following VMoptions:</p><blockquote>  <pre>eclipse.exe [eclipse arguments] -vm &lt;path to j9w.exe&gt;             -vmargs -ms:32 -mm:2048 -mo:32768 -moi:32768 -mca:32 -mco:128 -mx:2000000</pre></blockquote><p> When running Eclipse on J9 version 2.0, the default arguments chosen by J9W   should be suitable. However, to override the parameters which are automatically   set internally by the eclipse executable, you must specify -vmargs with no following arguments   as follows: </p><blockquote>  <pre>eclipse.exe [eclipse arguments] -vm &lt;path to j9w.exe&gt; -vmargs</pre></blockquote><p>Please refer to the J9 VM documentation and help for further information.</p><h3>Running Eclipse on the IBM Developer Kit, Java(TM) Technology Edition VM</h3><p>The default vm settings for IBM Developer Kit, Java(TM) Technology Edition 1.3 Linux work well for initial exploration, butare not sufficient for larger scale development. For large-scale development youshould&nbsp; modify your vm argumentsto make more heap available:&nbsp;</p><blockquote><pre>-vmargs -Xmx256M </pre></blockquote><p>will allow the Java heap to grow to 256MB.</p><p>&nbsp;<br><a href="../hglegal2002.htm"><img src = "../images/ngibmcpy2002.gif" alt="Copyright IBM Corporation and others 2000, 2002" border="0"></a></p></body></html>