<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Filtering resources from a release</title>
<meta name="keyword" content="team">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H1 CLASS="Head">
Filtering resources from a release</H1>
<p CLASS="Para" Label="Type">When synchronizing resources, often there are resources that you do not want to release to the stream.
For example, external editors might create temporary files in your project, or
compilation of .java files might create .class files, or some build operations
might result in binary files. These generated files, when taken together, may be
quite large. They may also be regenerated whenever a build is performed,
resulting in many outgoing changes. Typically these are not files that one wants
to persist in the repository or to share with other members of a team.
&nbsp;&nbsp;</p>
<P CLASS="Para" Label=Type>
There are two &quot;ignore&quot; facilities that allow you to specify which
resources should be excluded from catch up and release operations. The first is a global facility, provided by the
workbench, which you can use for ignoring files that might appear anywhere in your project hierarchy.
For example, if you create a global ignore for <samp>/bin</samp>, any resource that matches &quot;bin&quot; in any directory
in the workbench will be ignored at release time. The second is the CVS ignore facility, which reads the contents of
the file .cvsignore to determine what to ignore. This provides
compatibility with the existing CVS ignore files and is used most often to
ignore directories. The .cvsignore file only applies the pattern to resources in the
<i> same</i> directory as the .cvsignore file itself. </P>


<P CLASS="Para" Label=Type>
<b>Tip</b>: Once a resource is under version control, it cannot easily be subsequently be
ignored.&nbsp; A resource comes under version control in the first place when a
synchronize operation is performed on a resource or any of its parent
folders.&nbsp; You should consider, prior to performing your first&nbsp;
synchronize operation, which files and directories you wish to ignore, and add
them to the appropriate ignore facility.&nbsp; </P>


<p><img border="0" src="../images/ngrelc.gif" alt="Related concepts" width="159" height="27"><br>
<a href="../concepts/concepts-26.htm">Team programming</a> &nbsp;<a href="../concepts/concepts-27c.htm"><br>
</a><a href="../concepts/concepts-27b.htm">
Streams</a><a href="../reference/ref-51a.htm"><br>
</a><a href="../concepts/concepts-30.htm">
Team synchronization</a>&nbsp;</p>


<p><img border="0" src="../images/ngrelt.gif" alt="Related tasks" width="159" height="27"><a href="tasks-115.htm"><br>
Synchronizing with a stream</a><a href="tasks-114.htm"><br>
Releasing resources to the stream</a><a href="tasks-100d.htm"><br>
</a><a href="tasks-100d1.htm">
Creating a global pattern to
                filter resources from releasing</a> &nbsp;<a href="tasks-100d2.htm"><br>
Adding a CVS ignore file to
                filter resources from a release</a> &nbsp;<a href="tasks-100d3.htm"><br>
Stopping resources from
                releasing at synchronization time</a> &nbsp;<a href="tasks-100d1b.htm"><br>
Overriding patterns that prevent resources from releasing</a></p>


<P>
<img align="texttop" src = "../images/ngibmcpy.gif" alt="Copyright IBM Corp. 2000,2001" width="195" height="12">
</P>


</BODY>
</HTML>
