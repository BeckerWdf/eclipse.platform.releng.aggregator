<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<meta name="copyright" 
content="Copyright (c) IBM Corporation and others 2000, 2005. 
This page is made available under license. 
Full for details see the LEGAL in the documentation book that contains this page." >

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Upgrading Eclipse</title>
</head>

<BODY BGCOLOR="#ffffff">

<h1>Upgrading Eclipse</h1>
<p>
If you are upgrading to a newer release of Eclipse from an older release, there are
simple steps to follow to migrate your workspace to the new release.  Your workspace
is the directory on disk that contains all of your project files, as well as meta-data such
as preferences you may have customized.  The steps to follow for upgrading depend on
whether or not you used the &quot;-data&quot; command line argument when starting 
Eclipse.  The &quot;-data&quot; argument is recommended because it clearly specifies the 
location of your workspace.  If this argument is not used, Eclipse will place the workspace
in the current working directory at the time Eclipse was launched.
</p>
<p><i>Tip:</i> It doesn't hurt to make a backup of your workspace before
upgrading.  After you've upgraded your workspace, you won't be able to use it
again with an older version of Eclipse.  If you ever want to go &quot;back in time&quot;
to an earlier release, you'll need that backup!
</p>
<h2>Users who don't use &quot;-data&quot;</h2>
<p>
If you weren't previously using &quot;-data&quot; to specify your workspace, follow
these steps to upgrade:
<ol>
<li>Find the workspace directory used by your old version of Eclipse.  Typically this
is located inside the eclipse install directory in a sub-directory called &quot;workspace&quot;.
If you were using a shortcut or script to launch Eclipse, then it will be under the current
working directory of that shortcut or script in a sub-directory called &quot;workspace&quot;.
Windows users, this is specified by the &quot;Start in&quot; argument in your shortcut properties.</li>
<li>Copy this workspace directory into a new, empty location outside of any Eclipse
install directory.</li>
<li>Install the new version of Eclipse in a new location, separate from any old version
of Eclipse.</li>
<li>Start this new version of Eclipse, using the &quot;-data&quot; command line argument to 
point to the workspace location.</li>
</ol>
<p></p>
<p>
Example:<br><br>
Old Eclipse install directory: <br>
&nbsp;&nbsp;&nbsp;<code>c:\eclipse2_0</code><br><br>

New Eclipse install directory: <br>
&nbsp;&nbsp;&nbsp;<code>c:\eclipse2_1</code><br><br>

Workspace location: <br>
&nbsp;&nbsp;&nbsp;<code>c:\data\EclipseWorkspace</code><br><br>

Java VM location: <br>
&nbsp;&nbsp;&nbsp;<code>c:\jre</code><br><br>

Command line to start Eclipse: <br>
&nbsp;&nbsp;&nbsp;<code>&quot;c:\eclipse2_1 -data c:\data\EclipseWorkspace -vm d:\jre\bin\javaw&quot;</code><br>
</p>
<p><i>Tip:</i> It's generally a good idea to explicitly specify which Java VM to
use when running Eclipse.  This is achieved with the &quot;-vm&quot; command line
argument as illustrated above.  If you don't use &quot;-vm&quot;, Eclipse will look
on the O/S path.  When you install other products, they may change your path, resulting
in a different Java VM being used when you next launch Eclipse.
</p>

<h2>Users who do use &quot;-data&quot;</h2>
<p>
If you were previously using the &quot;-data&quot; argument to start Eclipse, your 
upgrade path is much easier:
<ol>
<li>Install the new version of Eclipse in a new location, separate from any old version
of Eclipse.</li>
<li>Start this new version of Eclipse, using the &quot;-data&quot; command line argument to 
point to your old workspace location.</li>
</ol>
See the example in the previous section for an illustration.
<p></p>

<h2>Adding third party plug-ins</h2>
<p>
If you have installed extra plug-ins in your Eclipse environment, you will need to add
these new plug-ins to each new build or version of Eclipse you install.  Before you do
this, refer to the documentation for those plug-ins to ensure they are compatible
with the version of Eclipse you are moving to.  There are several ways to add these
extra plug-ins to your new Eclipse install:
<ol>
<li>Copy the directories for each plug-in into the &quot;plugins&quot; directory of your
new Eclipse version.</li>
<li>Use an Eclipse update site to re-install those extra plug-ins or features in the
new version of Eclipse.</li>
<li>If you are using product extensions, simply copy the &quot;links&quot; directory
into the new Eclipse version install directory.  For more details on product extensions,
see the documentation in the Platform Plug-in Developer Guide, under <b>Programmer's
Guide &gt; Packaging and delivering Eclipse based products &gt; Product extensions</b>.</li>
</ol>


</body>
</html>
