<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>More plug-in deployment options</title>

</HEAD>
<BODY BGCOLOR="#ffffff">
<h4>More plug-in deployment options</h4>
  
<P CLASS="Para">Now that we've run the default target for our build.xml buildfile, 
  it's time to explore some more options. </P>
<P CLASS="Para">As can be seen in the Outline view, the default build.xml Ant 
  buildfile has a number of targets.<br>
  <img src="../images/Image608_buildxml_outline.gif" alt="Outline view of default build.xml file" border="0" width="217" height="405"> 
</P>
<P CLASS="Para">Solid green arrows denote targets, while sub-targets are represented 
  by hollow green arrows. The following are the useful top-level targets:</P>
<ul>
  <li><b>build.update.jar</b> This target builds jars for the plug-in, then zips 
    them into a form suitable for use with the Eclipse Update Manager.</li>
  <li><b>HelloWorldPlugin.jar</b> This target does the work of the building jars 
    for the plug-in.</li>
  <li><b>build.jars</b> This is the default target we ran in the last section. 
    It defers to the HelloWorldPlugin.jar target to do its work.</li>
  <li><b>clean</b> This target deletes all zips, jars and temporary directories 
    that may have been created by other targets in this buildfile.</li>
  <li><b>zip.plugin</b> This target builds executable and source jars, then zips 
    everything into a single archive.</li>
</ul>
<p>Remember that this build.xml file is simply the <i>default</i> deployment buildfile 
  for an Eclipse plug-in. There will be times when you will want/have to modify 
  this buildfile to handle your particular projects. For example, if you have a directory 
  that contains resources necessary for your plug-in, you will want to update 
  the build.xml file to include this directory in the jars and zips it creates.</p>
<p>This completes our look at using Ant buildfiles to deploy Eclipse plug-ins. The 
  key points to remember are that you can easily create a default deployment buildfile 
  for a plug-in that contains many useful targets, and that while this default 
  buildfile is useful, you may have to modify it to suit your needs.</p>


<P><br>
<a href="../hglegal2003.htm">
<img src="../images/ngibmcpy2003.gif" alt="Copyright IBM Corporation 2000, 2003. All Rights Reserved." border="0" width="324" height="14"></a>
</P>

</BODY>
</HTML>
