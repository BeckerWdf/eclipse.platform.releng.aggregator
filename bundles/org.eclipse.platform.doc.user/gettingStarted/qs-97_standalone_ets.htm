<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Stand-alone external tools</title>

</HEAD>
<BODY BGCOLOR="#ffffff">
<h3>Stand-alone external tools</h3>
  
<P CLASS="Para">For the ultimate in external tool flexibility, create a 'stand-alone' 
  external tool launch configuration. This is similar to the project builder launch 
  configurations discussed in the last section, except that it need have nothing 
  to do with project building, and you can explicitly run it whenever you choose. 
  Suppose you wanted to have a way to quickly see the contents of a .jar file 
  in your workspace using the jar utility. </P>
<ol>
  <li>Select some .jar file in your workspace.</li>
  <li>Select 'External Tools...' from the External Tools workbench toolbar drop 
    down.<br>
    <img src="../images/Image616_et_dropdown.jpg" width="145" height="71"> 
  </li>
  <li>Select 'Program' in the tree, then click New.<br>
    <img src="../images/Image617_jar_inspector.jpg" width="670" height="562"> 
  </li>
  <li>Name the launch configuration 'jar inspector'.</li>
  <li>Use the first 'Browse File System...' button to locate the jar executable.</li>
  <li>In the Arguments field, type '-tvf' and a space, then click 'Variables...'.</li>
  <li>In the Select Variable dialog, you will see a number of variables you can 
    pass as arguments to the program specified in Location. Select '${resource_loc}' 
    and click OK. </li>
  <li>When this script is run, the absolute path of the resource selected in the 
    workbench will be passed to the jar utility in the position specified. </li>
  <li>Click Run.</li>
  <li>Notice that the script sends the jar utility output to the Console view.</li>
  <li>Select a different .jar file in your workspace.</li>
  <li>Click the External Tools button in the toolbar. Notice the contents of this 
    jar are sent to the Console view as well. Now you have a quick and easy way 
    to see the output of the jar utility for any .jar file in your workspace.</li>
</ol>
<p>This example has only scratched the surface of what you can do with external 
  tools. The important things to remember are that you can create an external 
  tool for anything you can run on your system, and that you can pass arguments 
  to the external tool related to the current workbench selection. In many cases, 
  this allows you to loosely integrate tools that do not have corresponding Eclipse 
  plug-ins. </p>


<P>&nbsp;</P>
<p><a href="qs-96_non_ant_pjs.htm"> <img border="0" src="../images/ngback.gif" alt="Back to previous topic" width="49" height="12"> 
  Non-Ant project builders</a></p>
<p></p>
<P><br>
  <a href="../hglegal2002.htm"> <img src="../images/ngibmcpy2002.gif" alt="Copyright IBM Corporation 2000, 2002. All Rights Reserved." border="0" width="324" height="14"></a> 
</P>

</BODY>
</HTML>