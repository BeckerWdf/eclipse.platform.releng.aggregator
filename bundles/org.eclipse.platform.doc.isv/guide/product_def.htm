<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>What is a product?</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<h2>
  What is a product?</h2>
<p>An Eclipse based <b>product</b> is a stand-alone program built with the
Eclipse platform.&nbsp;
Products include all the code and plug-ins needed to run them.&nbsp; This
includes a Java runtime environment (JRE) and the Eclipse platform code.&nbsp;
The plug-in code, JRE, and Eclipse platform are typically installed with a
product-specific installation program.&nbsp; Product providers are free to use
any installation tool or program that is appropriate for their needs.&nbsp; </p>
<p>Once installed, the user launches the product and is presented with an
Eclipse workbench configured specifically for the purpose supported by the
product, such as web development, C++ program development, or any other
purpose.&nbsp; The platform makes it easy to configure labels, about dialogs,
graphics, and splash screens, so that the user has no concept of a platform
workbench, but instead views the workbench as the main window of the product
itself.</p>
<p>The top level directory structure of such a product looks something like this
for a hypothetical product called &quot;AcmeWeb&quot; that has been installed on
a Windows platform:</p>
<pre><font color="#4444CC">acmeweb/
</font>	<font color="#4444CC">acmeweb.exe</font>		(product executable)
	<font color="#4444CC">eclipse/</font>		(directory for installed Eclipse files)
		<font color="#4444CC">.eclipseproduct</font>	(marker file)
		<font color="#4444CC">eclipse.exe	
		startup.jar		
		configuration/	
			config.ini
		jre/
		features/</font>	(installed features if any)
			<font color="#4444CC">com.example.acme.acmefeature_1.0.0/
				feature.xml
			...
		plugins/
			com.example.acme.acmefeature_1.0.0/
				plugin.xml
				about.ini
				about.html
				about.mappings
				about.properties
				acme.gif
				plugin_customization.ini
				splash.jpg
				welcome.xml
			com.example.acme.acmewebsupport_1.0.0/
			...
		links/
			...</font></pre>
<p>Let's take a look at what this means in more detail.&nbsp; There are actually
  two ways of defining a product in Eclipse: using the <a href="product_def_extpt.htm">products
  extension point</a>  (new to Eclipse 3.0) and using <a href="product_def_feature.htm">features</a> (the mechanism using in Eclipse 2.1).
  Under the covers Eclipse 3.0 uses the first (extension point) mechanism but
  contains compatibility functions which integrates legacy definitions into the
  new model.</p>
<p><a href="../hglegal.htm"><img src="../ngibmcpy.gif" alt="Copyright IBM Corporation and others 2000, 2004." border="0" width="324" height="14"></a></p>
</BODY>
</HTML>