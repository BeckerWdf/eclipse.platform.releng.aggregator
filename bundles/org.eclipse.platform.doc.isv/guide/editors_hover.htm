<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
Text hover
</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H2>Text hover</H2>
<p>JavaTextHover - installed using ITextViewer.setTextHover or subclass
SourceViewerConfiguration and implement getTextHover.</p>
<p>Hover is responsible for computing the region that should be used as the
source of hover info.&nbsp;&nbsp;</p>
<p>JavaTextHover shows how you can determine the hover region using other
relevant information.&nbsp; In this example, a hover region is only provided the
offset for which hover is requested is contained in the selection (show the code
and screen snap).</p>
<p>(Is this what Kai considers context sensitive behavior or did he have
something more elaborate in mind?)</p>
<h3>Ruler hover</h3>
<p>Hover on the ruler can be used to show line-oriented information.</p>
<p>You can configure your ruler hover by subclassing SourceViewerConfiguration
or using
setAnnotationHover</p>
<p>An annotation hover returns the string itself given the viewer and line
number.&nbsp; JavaAnnotationHover demonstrates this by using the line number to
obtain the text on that line and place in the ruler's hover.&nbsp; (show code
and screen snap).</p>
<p>&nbsp;</p>
<p>&nbsp;</p>

<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corp. and others 2000,2002." width="250" height="12"></a></p>

</BODY>
</HTML>
