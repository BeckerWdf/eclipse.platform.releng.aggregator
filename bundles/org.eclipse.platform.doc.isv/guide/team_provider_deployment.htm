<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>Implementing a deployment provider</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">

<H3>Implementing a deployment provider</H3>
<p>
Deployment providers provide a light weight mechanism for associating a provider with a folder and persisting the mapping state. By implementing a deployment
provider there are no explicit workflows implied that you must adhere to. Deployment providers can be associated within a project that is already associated
with a repository provider, but the deployment provider doesn't have control over the project's resources. You can image a deployment provider
co-existing with the repository to provide say an easy mechanism for deploying part of a project to a test server.
</p>
<p>
The following sections will explain how to implement a deployment provider.

<h4>Extend DeploymentProvider and provide methods to serialization methods</h4>
<p>Create a concrete instance of Deployment provider and decide what information must be persisted between sessions.

<h4>Add an extension point </h4>
<p></p>

<h4>Add an extension point</h4>

<h4>Add an extension point</h4>

<h4>Site explorer???</h4>

<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corporation and others 2000, 2003." border="0" width="324" height="14"></a></p>
</BODY>
</HTML>
