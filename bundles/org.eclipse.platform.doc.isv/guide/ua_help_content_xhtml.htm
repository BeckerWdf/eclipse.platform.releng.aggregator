<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<meta content="text/css" http-equiv="Content-Style-Type">
<link type="text/css" charset="ISO-8859-1" href="../book.css" rel="STYLESHEET">
<link href="../book.css" type="text/css" rel="stylesheet">
</head>
<body bgcolor="white">

<h3>Contributing XHTML help documents</h3>

<p><b>Why use XHTML?</b></p>

<p>
The help system provides the ability to produce <a href="ua_dynamic.htm">dynamic help
content</a> by annotating your XHTML markup with special tags to
<a href="ua_dynamic_filters.htm">filter</a>,
<a href="ua_dynamic_includes.htm">includes</a>, and specify
<a href="ua_dynamic_anchors.htm">anchors</a> for extensions. These features are not
available when using HTML.
</p>

<p><b>How to contribute XHTML</b></p>

<p>
XHTML help documents are contributed in much the same way as HTML, except there are
a few important differences that must be there in order to support dynamic content
and searching. These required modifications are listed below:
</p>

<ul>
   <li>
      <p>
         You <b>must</b> use the <code>.xhtml</code> file extension for your XHTML
         files!
      </p>
      <p>
         This is required by the dynamic content producer to know which files
         to produce dynamic content for, and for the search participant to properly
         treat XHTML files when indexing for search later on.
      </p>
   </li>
   <li>
      <p>
         You <b>must</b> bind the XHTML search participant to your
         doc plugin.
      </p>
      <p>
         The eclipse help implementation uses <a href="http://lucene.apache.org/">
         Lucene</a> to index its documents to speed up searching. In order to index
         a document, Lucene must be able to read the format. Eclipse already provides
         a search participant for indexing XHTML documents, so you simply need to
         tell the help system to use it for your documents. Add the following extension
         to your plug-in manifest:
      </p>
      <p>
         <pre>
   &lt;extension
         point="org.eclipse.help.base.luceneSearchParticipants"&gt;
      &lt;binding participantId="org.eclipse.help.base.xhtml"/&gt;
   &lt;/extension&gt;
         </pre>
      </p>
   </li>
   <li>
      <p>
         If using dyamic content, you <b>must</b> bind the XHTML dynamic content
         producer to your doc plugin.
      </p>
      <p>
         If you want to produce dynamic content using the XML annotations, you need
         to tell the help system that it should process your documents. This is
         done by binding the XHTML dynamic content producer to your plugin.
      </p>
      <p>
         <pre>
   &lt;extension
         point="org.eclipse.help.contentProducer"&gt;
      &lt;binding producerId="org.eclipse.help.dynamic"/&gt;
   &lt;/extension>
         </pre>
      </p>
   </li>
</ul>

<a name="include_format"/><p><b>XHTML include format</b></p></a>

<p>
If you wish to use <a href="ua_dynamic_includes.htm">includes</a> in your XHTML,
the format of the <code>path</code> attribute is as follow: (explained below)
</p>

<p>
<pre>
   &lt;plugin_id&gt;/&lt;path_to_xhtml_file&gt;/&lt;filename_xhtml&gt;/&lt;element_id&gt;
</pre>
</p>

<p>
Where the fields are:
</p>

<p>
<ul>
   <li>
      <b>plugin_id</b>: The id of the plug-in containing the content to include
      (e.g. <code>org.eclipse.help</code>)
   </li>
   <li>
      <b>path_to_xhtml_file</b>: The plug-in relative path to the file (e.g. <code>
      /my_folder/my_sub_folder/</code>)
   </li>
   <li>
      <b>filename_xhtml</b>: The name of the XHTML file, including extension (e.g.
      <code>my_file.xhtml</code>)
   </li>
   <li>
      <b>element_id</b>: The unique identifier for the element you wish to include. This
      is set by adding an <code>id</code> attribute to that element (e.g. <code>
      my.element.id</code>)
   </li>
</ul>
</p>

<p>
For example, if you wish to include the paragraph (<code>&lt;p&gt;</code> element)
with the id <code>my_copyright</code> from the file <code>/copyrights/copyright.xhtml
</code> in plugin <code>my.product.plugin</code>, you would specify the following:
</p>

<p>
<pre>
   my.product.plugin/copyrights/copyright.xhtml/my_copyright
</pre>
</p>

</body>
</html>
