<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2006. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="STYLESHEET" href="../book.css" charset="ISO-8859-1" type="text/css">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js"></script>
<title>Dynamic content</title>
</head>
<body>

<h2>Dynamic content</h2>

<p><b>What is dynamic content?</b></p>

<p>
Several user assistance components allow you to provide dynamic content. This
means the content can change depending on the user's environment or context. For
example, you may want a section of your help document or welcome page to only
appear if the user has a certain functionality enabled.
</p>

<p>
There are two basic ways to create dynamic content. One is to add tags and attributes
(annotations) to your XML markup instructing the system to filter out sections or
documents, include sections from other documents, or specify anchors allowing
other components to extend your documentation.
</p>

<p>
The other method is to write your own content producer by plugging in some
Java code that will write the content from scratch or process existing static
documents on-the-fly. Let's examine both approaches.
</p>

<p><b>XML Annotations</b></p>

The simplest way to create dynamic content is to use the XML markup annotations.
You simply add some special attributes and tags to your XML markup and the system
will process the instructions. You can use this markup to:

<ul>
<li><a href="ua_dynamic_filters.htm">Filter</a> out documents or parts of documents</li>
<li><a href="ua_dynamic_includes.htm">Include</a> sections from other documents, and</li>
<li>Specify <a href="ua_dynamic_anchors.htm">anchors</a> where other components can extend your documents</li>
</ul>

<p>
To learn more about each aspect of the markup, follow the links above or find the
topics in the table of contents.
</p>

<p>
This is demonstrated in the XHTML fragment shown below:
</p>

<p>
<hr>
<pre>

&lt;p&gt;
This is a static paragraph.
&lt;/p&gt;

&lt;!-- This tag will be replaced with the referenced tag --&gt;
<font color="blue">&lt;include path="my.plugin.id/path/my_other_document.xhtml/element_id"/&gt;</font>

&lt;ul&gt;
   &lt;li&gt;
      This is a static list item.
   &lt;/li&gt;
   &lt;li <font color="blue">filter="os=win32"</font>&gt;
      This only shows when running on Windows.
   &lt;/li&gt;
   &lt;li <font color="blue">filter="plugin!=org.eclipse.help"</font>&gt;
      This only shows when plugin org.eclipse.help is NOT installed.
   &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- A place where others can add content --&gt;
<font color="blue">&lt;anchor id="my.anchor.id"/&gt;</font>

</pre>
<hr>
</p>

<p><b>Content producers</b></p>

<p>
A content producer is a mechanism for plugging-in Java code to produce the document
content on-the-fly. Content producers are more powerful than XML annotations, but
are more complex to use.
</p>

<p>
Content producers are supported in the following areas of user assistance:
</p>

<ul>
   <li><a href="ua_intro_xhtml.htm">Welcome XHTML</a></li>
   <li><a href="ua_help_dynamic.htm">Help Documents (any format)</a></li>
   <li><a href="ua_help_context_dynamic.htm">Context-sensitive help</a></li>
</ul>

</body>
</html>
