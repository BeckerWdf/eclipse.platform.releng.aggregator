<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta name="copyright"
	content="Copyright (c) IBM Corporation and others 2000, 2007. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="STYLESHEET" href="../book.css" charset="ISO-8859-1"
	type="text/css">
<script language="JavaScript"
	src="PLUGINS_ROOT/org.eclipse.help/livehelp.js"></script>
<title>Status handling</title>
</head>
<body>

<h2>Defining a status handler</h2>

<p>There are two ways for contributing handlers to the Workbench:
<ol>
	<li>using <code>org.eclipse.ui.statusHandlers</code> extension
	point, see <a href="ua_statushandling.htm">User assistance and
	status handling</a></li>
	<li>using a custom <code>WorkbenchAdvisor</code> and overriding
	its method <em>WorkbenchAdvisor#getWorkbenchErrorHandler()</em></li>
</ol>
</p>

<h3>Creating and accessing the custom advisor</h3>

<p>First,define a custom WorkbenchAdvisor for your application has
to be created.In this new custom advisor override <code>getWorkbenchErrorHandler()</code>
This will now be the default error handler.</p>
<pre>
   public class CustomWorkbenchAdvisor extends WorkbenchAdvisor {
      public AbstractStatusHandler getWorkbenchErrorHandler() {
         ...
         
         return customStatusHandler;
      }
   }
</pre>


<p>In the custom Application use your new advisor when creating the
<code>Workbench</code>.</p>
<pre>
   public class CustomApplication implements IApplication{
      public Object start(IApplicationContext appContext) throws Exception {
         ...
         Display display = createDisplay();
         PlatformUI.createAndRunWorkbench(display, new CustomWorkbenchAdvisor());
         ...
      }

      protected Display createDisplay() {
         return PlatformUI.createDisplay();
      }
   }
</pre>

<p>For details how to run a custom application see <b><code><a
	href="../reference/extension-points/org_eclipse_core_runtime_applications.html">
org.eclipse.core.runtime.applications</a></b> extension point documentation.</code></p>

<p>When the status handling facility is accessed, the facility will
get instance of the handler returned by our custom advisor <em>getWorkbenchErrorHandler()</em>
method and used for handling of status or error occurred in the
application.</p>

</body>
</html>
