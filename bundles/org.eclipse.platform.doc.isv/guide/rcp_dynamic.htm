<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
Defining a rich client application
</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H2> Dynamic Plug-ins</H2>
<p>-Determining an appropriate name (Dynamic Plug-ins, Dynamic UI, Registry Management);
<p>:<br>
  -API TBD (Core or Platform); 
<p>:
<p>-and any other new developments since we last met.<br>
  : 
<p>Registry Management and Dynamic UI are an easy way to help you track the 
  comings and goings of Plug-ins. 
<p>&nbsp;
<p>A dynamic plug-in is a reusable component with the potential to be unloaded.
<p> A dynamic plug-in may not remain for the life of the application, as such, 
  it is essential to ensure that when the component goes away everything is cleaned 
  up.
<p> When listeners are hooked on the Workbench and items are registered, they 
  remain there after shut down, these plug-ins must be aware that they need to 
  clean up.
<p>Another problem is that of a plug-in developing extension points for others 
  to use, it is important to be aware that other plug-ins can disappear.<br>
  <br>
  Information based on the registry cannot be cashed without monitoring to see 
  if there have been any changes to it.<br>
</p>
<p> The assumption that on start up, a read through of all the implementations 
  of the extension point will be sufficient for the life of the application is 
  false as that will not work. You must ensure that either the listener is hooked 
  or nothing is ever cashed, so that registry changes are listened for.</p>
<p>Assume that your application is reading from the registry and has an extension, 
  create a record for it and assign its location. Upon its conclusion, you would 
  be notified that a clean up is required. In addition, a listener will announce 
  when new items come in and create them. <br>
  -There will be utilities for that (Next week - note with names to follow)</p>
<p>:<br>
  -The funtionality will be the same as just described, easy way of listening 
  for things coming in and going out.</p>
<p>:<br>
</p>
<p>It is important to understand that items in the workbench are not necessarily 
  static, they are in fact transient and could go away at any time. If you're 
  writing a plug-in for a specific view first ensure that the view is still there.<br>
</p>
<p><img border="0" src="../cpy.png" alt="Legal notices." border="0" >
</BODY>
</HTML>
