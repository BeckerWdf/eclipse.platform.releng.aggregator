<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
Boolean expressions and action filters
</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H2>
Boolean expressions and action filters</H2>
<p>
When a plug-in contributes an action to the workbench UI using one of the menu
extension points, it can specify the conditions under which the menu item is
visible and/or enabled in the menu.&nbsp; In addition to supplying simple enabling
conditions, such as selection counts and selection classes, plug-ins can use <b>boolean
expressions</b>  to make an action visible or enabled.</p>


<h3>
Boolean expressions</h3>


<P CLASS="CellBody">
The boolean expressions can contain simple boolean operators (NOT, AND, OR) and predefined expressions that
can evaluate the following conditions:</P>
<ul>
  <li>
    <p CLASS="CellBody"><b>objectClass</b> - true if each object in the
    selection subclasses or implements the class.</p>
  </li>
  <li>
    <p CLASS="CellBody"><b>objectState</b> - true if the named attribute equals the specified value.&nbsp; <b><a href="../reference/api/org/eclipse/ui/IActionFilter.html">IActionFilter</a>
    </b>assists in evaluating the expression.&nbsp; An action filter dynamically computes the enablement
criteria for an action based on the target selection and the value of named
attributes.</p>
  </li>
  <li>
    <p CLASS="CellBody"><b>systemProperty</b> - true if the named system
    property equals the specified value.</p>
  </li>
  <li>
    <p CLASS="CellBody"><b>pluginState</b> - specifies whether the specified
    plugin (by <b>id</b>) should be <b>installed</b> or <b>activated</b> </p>
  </li>
</ul>
    <p CLASS="CellBody">For example, the following snippets represent enablement
    expressions that could be used on a hypothetical action in an action set: </p>
    <pre><font color="#4444CC">&lt;action id=&quot;org.eclipse.examples.actionEnablement.class&quot; 
       label=&quot;Red Element&quot; 
       menubarPath=&quot;additions&quot; 
       class=&quot;org.eclipse.examples.actionEnablement.ObjectTestAction&quot;&gt; 
       &lt;enablement&gt; 
<b>	 &lt;and&gt;
	   &lt;objectClass name=&quot;org.eclipse.examples.actionEnablement.TestElement&quot;/&gt; 
           &lt;objectState name=&quot;name&quot; value=&quot;red&quot;/&gt; 
	 &lt;/and&gt;
</b>       &lt;/enablement&gt; 
&lt;/action&gt; </font></pre>
    <pre><font color="#4444CC">&lt;action id=&quot;org.eclipse.examples.actionEnablement.property&quot; 
       label=&quot;Property&quot; 
       menubarPath=&quot;additions&quot; 
       class=&quot;org.eclipse.examples.actionEnablement.PropertyTestAction&quot;&gt; 
       &lt;enablement&gt; 
<b>           &lt;systemProperty name=&quot;MyTestProperty&quot; value=&quot;puppy&quot;/&gt; 
</b>       &lt;/enablement&gt; 
&lt;/action&gt; </font></pre>
    <pre><font color="#4444CC">&lt;action id=&quot;org.eclipse.examples.actionEnablement.pluginState&quot; 
       label=&quot;Installed&quot; 
       menubarPath=&quot;additions&quot; 
       class=&quot;org.eclipse.examples.actionEnablement.PluginTestAction&quot;&gt; 
       &lt;enablement&gt; 
           <b>&lt;pluginState id=&quot;x.y.z.anotherPlugin&quot; value=&quot;installed&quot;/&gt; </b>
       &lt;/enablement&gt; 
&lt;/action&gt; </font></pre>
<p CLASS="CellBody">See the reference documentation of the extension points
below for more elaborate samples of these expressions and a complete description of
the XML.</p>


<p>
The following table lists extension points that contribute actions and
summarizes how XML markup attributes and boolean expressions can be used to
affect enablement.</p>


<TABLE BORDER="1" width="671">
<TR>
<TH ROWSPAN="1" COLSPAN="1" width="118">
<P CLASS="CellHeading">
Extension point name</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1" width="359">
<P CLASS="CellHeading">
Attributes affecting enablement</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1" width="335">
<P CLASS="CellHeading">
Boolean expressions</P>
</TH>
</TR>
<TR>
<TD width="118">
<P CLASS="CellBody">
<b>
<a href="../reference/extension-points/org_eclipse_ui_viewActions.html">
viewActions</a></b>,</P>
<P CLASS="CellBody"><b><a href="../reference/extension-points/org_eclipse_ui_editorActions.html">editorActions</a></b>,</P>
<P CLASS="CellBody"><b><a href="../reference/extension-points/org_eclipse_ui_actionSets.html">actionSets</a></b></P>
</TD>
<TD width="359">
<P CLASS="CellBody">
<b>enablesFor</b> - specifies the selection count that must be met for the
action to be enabled</P>
<P CLASS="CellBody">
<b>selection</b> <b>class</b> - the class that the selected objects must
subclass or implement in order for the action to be enabled</P>
<P CLASS="CellBody">
<b>selection</b> <b>name</b> - a wild card filter that can be applied to the
objects in the selection.</P>
</TD>
<TD width="335">
<P CLASS="CellBody">
<b>visibility</b> - a boolean expression.&nbsp; Controls whether the menu item
is visible in the menu.</P>
<P CLASS="CellBody">
<b>enablement</b> - a boolean expression.&nbsp; Controls whether the menu item
is enabled in the menu.&nbsp; The <b>enablesFor</b>  attribute and the <b>selection</b> <b>class</b>
and <b>name</b>, and must be
satisfied before applying the enablement expression.</P>
</TD>
</TR>
<TR>
<TD width="118">
<P CLASS="CellBody">
<b>
<a href="../reference/extension-points/org_eclipse_ui_popupMenus.html">
popupMenus</a></b></P>
</TD>
<TD width="359">
<P CLASS="CellBody">
(For object contributions only.)</P>
<P CLASS="CellBody">
<b>objectClass</b> - specifies the class that objects in the selection must
subclass or implement</P>
<P CLASS="CellBody">
(For both object and viewer contributions)</P>
<P CLASS="CellBody">
<b>enablesFor</b> - specifies the selection count that must be met for the
action to be enabled</P>
<P CLASS="CellBody">
<b>selection</b> <b>class</b> - the class that the selected objects must
subclass or implement to enable the action</P>
<P CLASS="CellBody">
<b>selection</b> <b>name</b> - a wild card filter that can be applied to the
objects in the selection.</P>
<P CLASS="CellBody">
&nbsp;</P>
</TD>
<TD width="335">
<P CLASS="CellBody">
(For both object and viewer contributions)</P>
<P CLASS="CellBody">
<b>visibility</b> - a boolean expression.&nbsp; Controls whether the menu item
is visible in the menu.</P>
<p CLASS="CellBody"><b>enablement</b> - a boolean expression.&nbsp; Controls
whether the menu item is enabled in the menu.&nbsp;
The <b>enablesFor</b>  attribute and the <b>selection</b> <b>class</b> and <b>name</b>, and must be
satisfied before applying the enablement expression.
</TD>
</TR>
</TABLE>

<h3>Using objectState with content types</h3>
<p>The ability to define content types (see <a href="runtime_content.htm">Content types</a>) can be combined
with boolean expressions to define very specific enablement or visibility conditions based on
the content type of a resource.  For example, the following snippet makes a popup menu item visible only if the
selected file's content matches the plug-in's specialized content types.
<font color='#4444CC'><pre>
&lt;extension point="org.eclipse.ui.popupMenus"&gt;
   &lt;objectContribution
      id="com.example.objectContributions"
      objectClass="org.eclipse.core.resources.IFile"
      nameFilter="*.xml"&gt;
         &lt;visibility&gt;
            &lt;or&gt;
               &lt;objectState
                  <b>name="contentTypeId"</b>
                  value="com.example.employeeRecordContentType"/&gt;
               &lt;objectState
                  <b>name="contentTypeId"</b>
                  value="com.example.customerRecordContentType"/&gt;
            &lt;/or&gt;
         &lt;/visibility&gt;
         &lt;action id="com.example.action1"
         ...
</pre></font>
The <b>contentTypeId</b> attribute can be used in an objectState expression to check the content type of
the selected xml file.  This allows a plug-in to apply very specific content checking before enabling or showing
menu actions related to specific types of files.  See <a href="runtime_content.htm">Content types</a> for more detail
about the content type extension.
</p>
<p><a href="../notices.html"><img border="0" src="../cpy.gif" alt="Legal notices." border="0" width="324" height="14"></a></p>


</BODY>
</HTML>
