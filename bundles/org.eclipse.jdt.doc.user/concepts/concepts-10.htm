<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Debugger</title>

</HEAD>
<BODY BGCOLOR="#ffffff">
<H1 CLASS="Head">
Debugger</H1>
<P CLASS="Para">
The JDT includes a debugger that enables you to detect and diagnose errors in your programs running either locally or remotely. </P>
<P CLASS="Para">
The debugger allows you to control the execution of your program by setting breakpoints, suspending launches, stepping through your code, and examining the contents of variables. </P>
<P CLASS="Para">
The debugger has a client/server design so you can debug programs running remotely on other systems in the network as well as programs running locally on your workstation. The debugger server runs on the same system as the program you want to debug, which can be on your workstation (local debugging) or a system that is accessible through a network (remote debugging). </P>
<DIV CLASS="Topic">
<H1 CLASS="Head">
Breakpoints</H1>
<P CLASS="Para">
Breakpoints are temporary markers you place in your program to tell the debugger to stop your program at a given point. When the workbench is running a program and encounters a breakpoint, it suspends execution. The corresponding thread is suspended (i.e., temporarily stops running) so that you can see the stack for the thread.</P>
<P CLASS="Para">
Execution suspends at the breakpoint before the statement is executed. You can check the contents of variables and the stack. You can then step over statements, step into other methods or classes, continue running until the next breakpoint is reached, or continue running until you reach the end of the program.</P>
<P CLASS="Para">
You can disable a breakpoint so that it does not suspend execution and then, later, enable it again. </P>
</DIV>
<DIV CLASS="Topic">
<H1 CLASS="Head">
Remote Debugging</H1>
<P CLASS="Para">
Remote debugging allows you to run an application on one system and debug the application on another system. The local system runs the debugger, and the remote system runs both the debugging engine and your program.</P>
<DIV CLASS="Subtopic">
<H2 CLASS="Head">
Connection</H2>
<P CLASS="Para">
The main requirement for remote debugging is access to remote machines where the files you are debugging must reside. When debugging a program remotely, a debug engine daemon begins listening for a connection. Once a connection is made, you can begin to debug your program.</P>
</DIV>
<DIV CLASS="Subtopic">
<H2 CLASS="Head">
Why Use Remote Debugging?</H2>
<P CLASS="Para">
Remote debugging can prove useful in any number of situations, such as:</P>
<UL CLASS="UnorderedList">
<LI CLASS="Item">
The program you are debugging may be running on another system and might behave differently on that system than on your own. You can use the remote debug feature to debug this program on the (other) remote system from your local system. The user on the system running that program interacts with the program as usual (except where breakpoints or step commands introduce delays), and you are able to control the program and observe the remote program's internal behavior from your local system.</LI>
<LI CLASS="Item">
You may want to debug a program that uses graphics or has a graphical user interface (GUI). It is easier to debug an application that uses graphics or has a GUI when you keep the debugger user interface (UI) separate from the UI of the application itself. Your interaction (or another user's interaction) with the application occurs on the remote system, while your interaction with the debugger occurs on the local system.</LI>
<LI CLASS="Item">
The program you are debugging might have been compiled for a platform where the debugger UI will not run. You can use the remote debugging feature to take advantage of the debugger UI on your local machine while debugging the application running on the remote machine.</LI>
</UL>
</DIV>
</DIV>
<P>&nbsp;<br>

<img src = ../ngibmcpy.gif width="195" height="12">

</P>





</BODY>
</HTML>
