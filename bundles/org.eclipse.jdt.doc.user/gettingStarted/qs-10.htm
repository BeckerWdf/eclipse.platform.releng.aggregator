<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="GENERATOR" content="Mozilla/4.75 [en] (Windows NT 5.0; U) [Netscape]">
<meta name="Author" content="MAe">
<title> Moving and copying Java elements </title>
<link rel="stylesheet" href="../book.css" charset="ISO-8859-1" type="text/css">
</head>
<body>
<h1> Moving and copying Java elements </h1>
<p> In this section, you will move a resource between Java packages. </p>
<ol>
  <li> In the Package Explorer view, select the&nbsp;<em>MyTestCase.java</em> 
    file and drag it into the&nbsp;<em>junit.framework</em> package. The file 
    is moved, and its package declaration changes to reflect the new location. 
    <p> <img src="../images/qs-44.gif" alt="Editor with updated package declaration" height="183" width="466"> 
    </p>
  </li>
  <li> Select the&nbsp;<em>MyTestCase.java</em> file and drag it into the root 
    directory of the JUnit project. A default package is created to contain the 
    class, and the package declaration is removed to reflect its new location. 
    <p> <img src="../images/qs-45.gif" alt="Editor without package declaration" height="160" width="506"> 
    </p>
  </li>
  <li> Using the context menu is an alternative to drag and drop:<br>
    Select the&nbsp;<em>MyTestCase.java</em> file and from its context menu, select&nbsp;<strong>Refactor 
    &gt; Move</strong>. In the Move dialog, expand the hierarchy to browse the 
    possible new locations for the resource. Select the&nbsp;<em>junit.framework</em> 
    package, then click&nbsp;<strong>OK</strong>. The class is moved, and its 
    package declaration is updated to the new location. 
    <p> <img src="../images/qs-46.gif" alt="Move destination dialog" height="415" width="346"> 
    </p>
    <em>Note: This example did not result in compile errors. However, moving a 
    compilation unit can lead to compile errors because import statements are 
    not updated when a compilation unit is moved.</em> </li>
</ol>
<img src="../images/ngrelc.gif" alt="Related concepts" border="0" height="27" width="159"> 
<p> <a href="../tasks/tasks-6.htm">Java views</a><br>
  <a href="../concepts/concepts-9.htm">Refactoring support</a> </p>
<p> <img src="../images/ngrelt.gif" alt="Related tasks" border="0" height="27" width="159"> 
</p>
<p> <a href="../tasks/tasks-80.htm">Refactoring</a><br>
  <a href="../tasks/tasks-85.htm">Copying and moving Java elements</a><br>
  <a href="../tasks/tasks-51.htm">Moving folders, packages and files</a> </p>
<p> <img src="../images/ngrelr.gif" alt="Related reference" border="0" height="27" width="159"> 
</p>
<p> <a href="../reference/ref-menu-refactor.htm">Refactoring actions</a><br>
  <a href="../reference/ref-117.htm">Refactoring wizard</a><br>
  <a href="../reference/ref-23.htm">Refactoring preferences</a> </p>
<p> <a href="../hglegal2002.htm"><img src="../images/ngibmcpy2002.gif" alt="Copyright IBM Corporation 2000, 2002. All Rights Reserved." border="0" height="14" width="324"></a> 
</p>
</body>
</html>

