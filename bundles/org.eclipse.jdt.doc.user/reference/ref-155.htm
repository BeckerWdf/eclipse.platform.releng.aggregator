<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Glossary</title>

</HEAD>
<BODY BGCOLOR="#ffffff">
<H1 CLASS="Head">
Glossary</H1>
<h2>
CLASS Files</h2>
<P CLASS="Para">
A compiled Java source file.</P>
<h2>
compilation unit </h2>
<P CLASS="Para">
A Java source file.</P>
<h2>
field</h2>
<P CLASS="Para">
A field inside a type.</P>
<h2>
import container</h2>
<P CLASS="Para">
An import container represents a collection of import declarations. These can be seen in the Outline view.</P>
<h2>
import declaration</h2>
<P CLASS="Para">
A single package import declaration.</P>
<h2>
initializer</h2>
<P CLASS="Para">
A static or instance initializer inside a type.</P>
<h2>
JAR Files</h2>
<P CLASS="Para">
JAR (Java ARchive) files are containers for compiled Java source files. They can be associated with an archive (i.e., ZIP, JAR) as a source attachment. The children of JAR files are packages.JAR files can be either compressed or uncompressed.</P>
<h2>
JAVA Files</h2>
<P CLASS="Para">
These are editable files that are compiled into byte code (CLASS) files.</P>
<h2>
java projects</h2>
<P CLASS="Para">
Projects contain compilable Java source code and are the containers for source folders or packages. </P>
<h2>
JDT			</h2>
<P CLASS="Para">
Java development tooling; a workbench component that allows you to write, edit, execute, and debug Java code.</P>
<h2>
JRE			</h2>
<P CLASS="Para">
Java runtime environment (e.g., J9, JDK, etc.).</P>
<h2>
method</h2>
<P CLASS="Para">
A method or constructor inside a type.</P>
<h2>
package declaration</h2>
<P CLASS="Para">
The declaration of a package inside a compilation unit.</P>
<h2>
packages</h2>
<P CLASS="Para">
Packages contain Java compilation units and CLASS files.</P>
<h2>
refactoring			</h2>
<P CLASS="Para">
Refactoring means behavior-preserving program transformations. The JDT supports a number of transformations described in Martin Fowler's book <SPAN CLASS="Title">
Refactoring: Improving the Design of Existing Code</SPAN>, Addison Wesley, 1999. In short, refactoring is a comprehensive code editing feature that helps you improve, stabilize, and maintain your Java code.</P>
<P CLASS="Para">
When you refactor your code, your goal is to make a system-wide coding change without affecting the semantic behavior of the system or introducing new bugs. After a refactor, your code should be cleaner and more efficiently structured.</P>
<h2>
type</h2>
<P CLASS="Para">
A type inside a compilation unit or CLASS file.</P>
<h2>
source folder</h2>
<P CLASS="Para">
A folder containing Java packages.</P>
<h2>
VCM			</h2>
<P CLASS="Para">
Version control management. This term refers to the various repository and versioning features in the workbench.</P>
<h2>
VM</h2>
<P CLASS="Para">
Virtual machine.</P>
<P>&nbsp;<br>

<img src = ../ngibmcpy.gif width="195" height="12">

</P>





</BODY>
</HTML>
