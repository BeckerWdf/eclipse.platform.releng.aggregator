<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2006, 2009. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Target Platform Preferences</title>
<link rel="stylesheet" href="../../book.css" charset="ISO-8859-1" type="text/css">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript"> </script>
</head>

<body>
<h1>Target Platform Preferences</h1>
<p>Target Platform refers to the platform against which you are developing and testing your plug-ins. The target platform encompasses the location of the target, the list of plug-ins constituting the target, the target environment and launching arguments. </p>

<h2>Target Location</h2>
<p>The target location typically denotes the location of an Eclipse installation. When searching the target location for plug-ins, PDE assumes a typical Eclipse installation layout, i.e. plug-ins are expected to be in a <em>plugins/ </em>subdirectory of the target location. Similarly, features are assumed to be in a <em>features/ </em>subdirectory of the target location. </p>
<p><img src="../../images/preferences/target_location.png" alt="Target Location" ></p>
<p>Not all targets are Eclipse installations. Therefore PDE is flexible when it comes to locating plug-ins in the target. In the absence of a <em>plugins/</em> subdirectory, PDE assumes the target location itself is the directory where plug-ins are located.</p>
<p></p>
<p>How PDE builds it target platform is dictated by the <strong>Build target platform based on target's installed plug-ins</strong> preference. When this preference is enabled, PDE will attempt to locate the target location's list of installed plug-ins inside a configuration file (platform.xml or bundles.info). If PDE finds this file, it will build the target platform based on the plug-ins inside the configuration file. If it doesn't find the file, PDE will just manually scan the target location directory for the list of plug-ins.</p>

<h2>Target Definitions</h2>
<p>Target Definitions are <em>.target</em> files that encapsulate all aspects of a target (location, content, environment, etc.). </p>
<p>The Pre-defined Targets section of the 
<a class="command-link" href='javascript:executeCommand("org.eclipse.ui.window.preferences(preferencePageId=org.eclipse.pde.ui.TargetPlatformPreferencePage)")'>
<img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="Open the target platform preference page">
<strong>Window &gt; Preferences... &gt; Plug-in Development &gt; Target Platform</strong></a>
 preference page is initially populated by definitions contributed via the <strong>org.eclipse.pde.core.targets</strong> extension point.</p>
<p><img src="../../images/preferences/target_predefined.png" alt="Target definitions" ></p>
<p>You can browse for additional target definitions in the workspace using the <strong>Browse... </strong>button.</p>
<p>To preview the target profile before you apply it, click on the <strong>Target</strong> link. This will open a new window showing the content of the target definition.</p>
<p>To load the target, press the <strong>Load Target</strong> button. This will update all the tabs on the Target Platform preference page based on the content of the selected target definition. </p>

<p><img src="../../../images/ngrelr.png" alt="Related reference"></p>
<p>
<a href="target_plugins.htm">Target Plug-ins</a><br>
<a href="target_env.htm">Target Environment</a><br>
<a href="launching_args.htm">Launching Arguments</a><br>
<a href="implicit_dependencies.htm">Implicit Dependencies</a><br>
<a href="source_code_locations.htm">Source Code Locations</a><br>
</p>

</body>
</html>
