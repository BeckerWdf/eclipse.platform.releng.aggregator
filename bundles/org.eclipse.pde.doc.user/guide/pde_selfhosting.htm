<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Fragments</title>
</head>

<BODY BGCOLOR="#ffffff">

<h1>Self-hosting</h1>
<p CLASS="BodyText">Self-hosting is an activity in which a computer program is
used to create new versions of the same program. Self-hosting is very frequent
in compiler development, where new versions of the compiler are written in the
target language of the compiler and compiled by itself as part of the testing.
In Eclipse, self-hosting refers to using Eclipse for developing Eclipse
plug-ins. If it sounds like the mission statement of PDE, it should. By the
virtue of using PDE, you are already self-hosting.</p>

<p CLASS="BodyText">PDE supports two distinct styles of self-hosting. They both
have their advantages and disadvantages and are designed for different usage
scenarios. The differ in the way plug-in dependencies are managed.</p>

<ol>
  <li>
    <p CLASS="BodyText"><b>Simple (standalone) self-hosting</b> uses external
    plug-ins for resolving plug-in references. It is simple, easy to manage and
    understand, and is completely adequate for standalone developers (those who
    do not use remote repositories to share their code with others).</li>
  <li>
    <p CLASS="BodyText"><b>Binary project self-hosting</b> introduces a step
    whereby external plug-ins are imported into the workspace as binary
    projects. They are still not meant to be modified and are usually hidden
    using binary project filter in Package Explorer.</li>
</ol>
<p CLASS="BodyText"><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" width="195" height="12"></a></p>

<p> </p>

<p>&nbsp;</p>

<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>

</body>

</html>
