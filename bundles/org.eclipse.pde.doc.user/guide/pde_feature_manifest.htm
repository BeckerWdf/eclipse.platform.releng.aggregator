<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Component manifest editor</title>
</head>

<BODY BGCOLOR="#ffffff">

<h2>Feature manifest editor</h2>
<p>The feature manifest editor uses the same concepts seen in the other PDE editors. It has 
four form pages
(Overview, Information, Content and Advanced) and a Source page that shows you raw XML code of the
manifest file.</p>
<p align="center">
<img border="0" src="images/feature-overview.gif" alt="Feature manifest editor - Overview page" width="545" height="389"></p>
<p align="left">Information that is entered during the feature project setup
can be changed on the Overview page. In addition, you can provide URLs for <b> update
sites</b> and <b>
discovery sites</b> in the property
sheet. The update site URLs are used by the Update Manager when searching for
new updates.&nbsp; The discovery site URLs are used to point users to other interesting
features and/or sites.</p>
<p align="left">You can provide your own banner image that will be used in the
Update Manager when users browse your feature. If you mark the feature as
'primary', it will be treated as a 'product' feature and will have additional
responsibilities (providing 'About' information, splash screen etc.). Finally, 
you can require an exclusive install for your feature if it should be take part 
in batch installation (several features at once).</p>
<p align="left">By default, your feature is treated as universally portable. You
can add constraints by providing supported operating/windowing systems,
languages and/or system architectures. This information will be used to ensure
that your feature is not installed or shown in the context that does not match
these constraints.</p>
<p align="left">Features are required to provide description, license and
copyright information. This information can be edited on the Information page.
Each of these three categories can be represented as either text or a URL that
points to a valid HTML page. Although URL can be absolute, HTML pages are
typically provided with the feature and URLs are relative to the project root.</p>
<p align="center">
<img border="0" src="images/feature-overview-info.gif" alt="Feature manifest editor - Information page" width="545" height="388"></p>
<p align="left">Plug-ins and fragments that are part of your feature are
listed in the Content page. Pressing the <b>Add...</b> button brings up a list of
checkboxes representing all of the valid
plug-ins and fragments in the workspace. If you double-click on a
plug-in or fragment entry, the plug-in or fragment manifest editor will open for
the selected item.</p>
<p align="center">
<img border="0" src="images/feature-content.gif" alt="Feature manifest editor - Content page" width="545" height="388"></p>
<p align="left">Required plug-ins are plug-ins that are not part of the feature
but must be present in the target platform as a prerequisite for installing the
feature. If any of these plug-ins are missing, the feature will not be installed.
Required plug-ins can be computed based on collective dependency information in
plug-ins and fragments, or added manually using the <b>Add...</b> button. The
requirement can be based solely on plug-in IDs, or further constrained using
expected versions and match rules.</p>
<p align="left">Similar to plug-ins, features can be used as prerequisites. 
Similar rules apply. The distinct difference is that feature dependency is 
required when <b>patch</b> checkbox needs to be selected. See feature manifest 
reference for more details.</p>
<p align="left">In addition to these standard pages, feature manifest can be
used to set more advanced feature manifest data. Larger features may be built by
including other features, thus creating a feature hierarchy. In addition to
plug-ins, opaque data entries can be specified to carry custom feature
information. These entries usually come together with custom install handlers.
Install handlers can be used to perform non-standard install tasks and
manipulate data entries once they are downloaded by the Update Manager. You can
read more about this and other feature issues in Platform Install and Update
guide.</p>
<p align="center">
<img border="0" src="images/feature-advanced.gif" alt="Feature manifest editor - Advanced page" width="545" height="388"></p>
<p>&nbsp;<br>
<a href="../hglegal2003.htm">
<img src = "../images/ngibmcpy2003.gif" alt="Copyright IBM Corporation and others 2000, 2003" border="0" width="324" height="14"></a>
</p>

</body>

</html>