<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>Running a Java program</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H2>
Running a Java program</H2>
<P>
The JDT API includes facilities for launching a Java program using the VM
install that is currently configured by the user for a Java project.&nbsp;&nbsp;</P>

<H3>
Launching a compiled Java program</h3>
<P>
Java programs that have been compiled in a Java project can be run by getting the appropriate
<a href="../reference/api/org/eclipse/jdt/launching/IVMRunner.html"><b>IVMRunner</b></a>
for the Java project and running the class by name. The following code snippet shows how the class
<b>MyClass</b> inside <b> myJavaProject</b> can be launched.</P>
<font color='#4444CC'><pre>
   IVMInstall vmInstall = JavaRuntime.getVMInstall(myJavaProject);
   if (vmInstall == null)
      vmInstall = JavaRuntime.getDefaultVMInstall();
   IVMRunner vmRunner = vmInstall.getVMRunner(ILaunchManager.RUN_MODE);
   if (vmRunner != null) {
      String[] classPath = null;
      try {
         classPath = JavaRuntime.computeDefaultRuntimeClassPath(myJavaProject);
      } catch (CoreException e) { }
      if (classPath != null) {
         VMRunnerConfiguration vmConfig = 
            new VMRunnerConfiguration(&quot;MyClass&quot;, classPath);
         VMRunnerResult result = vmRunner.run(vmConfig);
      }
   }
</pre></font>


<P><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" width="195" height="12"></a></p>
</BODY>
</HTML>
