<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Jun 4, 2013 11:06:50 AM                                                        

     API Tools builder integration    
     This buildfile calls all of the post-build Ant tasks
     
     This buildfile requires the apitooling-ant.jar and the api-tasks.properties file
     from the org.eclipse.pde.api.tools bundle
                   
     mrennie                                                                
     ====================================================================== -->
<project name="API Tools builder integration" default="apiToolsReports">
	

	
	<!--
		The default target that calls apitooling.apifreeze, apitooling.analysis and apitooling.apideprecation
		and their respective _reportconversion tasks
	-->
	<target name="apiToolsReports"
	    depends="init">

        
		<!-- make a dir to place the XML and HTML output in, per build -->
		<property name="report" value="${buildDirectory}/${buildLabel}/apitools"/>
        <mkdir dir="${report}"/>
		<property name="freeze_report" value="${report}/freeze_report.xml"/>
		<touch file="${freeze_report}"/>
		<property name="freeze_html" value="${report}/freeze_report.html"/>
		
		<!-- grab the currently built + zipped build -->
        <property name="current_location"  value="${buildDirectory}/${buildLabel}/eclipse-SDK-${buildLabel}-win32.zip" />

		<!-- we would have to fetch the baseline we wanted, or perhaps just link to its location -->
        <property name="baseline" value="${reference}/${previousBaselineName}" />
        
		<!-- create properties for the filters -->
        <property name="exclude_list_location" value="${buildDirectory}/apiexclude/exclude_list.txt" />
        <property name="exclude_list_external_location" value="${buildDirectory}/apiexclude/exclude_list_external.txt" />
		
		<!-- run the freeze task -->
        <apitooling.apifreeze
            baseline="${baseline}"
            profile="${current_location}"
            report="${freeze_report}"
            excludelist="${exclude_list_location}"
            debug="true" />
        <apitooling.apifreeze_reportconversion
            xmlfile="${freeze_report}"
        	htmlfile="${freeze_html}"
            debug="true"/>
		
		<!-- create the Ant filterstore directory -->
        <property name="filter_store" value="${buildDirectory}/apifilters"/>
        <mkdir dir="${filter_store}"/>
		
		<!-- copy all of the .api_filters files out of the plugins from their source -->
        <copy todir="${filter_store}">
            <fileset
                dir="${buildDirectory}/plugins"
                includes="**/.settings/.api_filters" />
            <regexpmapper
                from="^(org.eclipse.*\/)(\.settings\/)(\.api_filters)"
                to="\1\3" />
        </copy>
		
		<!-- create a zip of API filters -->
        <property name="apifilterzip" value="${report}/apifilters-${buildId}.zip" />
        <exec
            executable="zip"
            dir="${report}">
            <arg line="-r ${apifilterzip} ${filter_store}" />
        </exec>
		
		<!-- create HTML output directory --> 
        <property name="analysis_html" value="${report}/analysis/html"/>
        <property name="analysis_report" value="${report}/analysis/xml"/>
        
		<!-- run the analysis -->
        <apitooling.analysis
            baseline="${baseline}"
            profile="${current_location}"
            report="${analysis_report}"
            filters="${filter_store}"
            excludelist="${exclude_list_external_location}"
            debug="true"/>
        <apitooling.analysis_reportconversion
            xmlfiles="${analysis_report}"
        	htmlfiles="${analysis_html}"
            debug="true"/>
		
        <property name="deprecation_report" value="${report}/deprecation/apideprecation.xml" />
        <property name="deprecation_html" value="${report}/deprecation/apideprecation.html" />
        
		<!-- run the deprecation tasks -->
		<apitooling.apideprecation
            baseline="${baseline}"
            profile="${current_location}"
            report="${deprecation_report}"
            debug="true"/>
        <apitooling.apideprecation_reportconversion
            xmlfile="${deprecation_report}"
            debug="true"
            htmlfile="${deprecation_html}"/>
    </target>
    
    <target name="init"
         unless="apitoolinginitialized">
        
        <!-- The name for the build - i.e. I20130603-2000 -->
        <fail unless="buildLabel" message="buildLabel must be provided."/>
        
        <!-- The on-disk location of the previous Eclipse build - for example Eclipse 4.2.2 -->
        <fail unless="previousBaselineName" message="previousBaselineName must be provided"/>
        
        <fail unless="previousBaseURL" message="full URL of previous build must be provided" /> 
        
        <!-- Default buildDirectory -->
        <fail unless="buildDirectory" message="buildDirectory much be provided"/>
        
        <!-- a dir to extract previous baselines in -->
        <property name="reference" value="${buildDirectory}/apitooolingreference" />
        <mkdir dir="${reference}"/>
        
        <get dest="${reference}" src="${previousBaseURL}"/>
        
        
        <property name="apitoolinginitialized" value="true"/>

    </target>
</project>
