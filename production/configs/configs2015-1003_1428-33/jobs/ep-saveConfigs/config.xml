<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <project-properties class="java.util.concurrent.ConcurrentHashMap">
    <entry>
      <string>hudson-plugins-disk_usage-DiskUsageProperty</string>
      <base-property>
        <originalValue class="hudson.plugins.disk_usage.DiskUsageProperty"/>
        <propertyOverridden>false</propertyOverridden>
      </base-property>
    </entry>
    <entry>
      <string>logRotator</string>
      <log-rotator-property>
        <originalValue class="hudson.tasks.LogRotator">
          <daysToKeep>20</daysToKeep>
          <numToKeep>20</numToKeep>
          <artifactDaysToKeep>-1</artifactDaysToKeep>
          <artifactNumToKeep>-1</artifactNumToKeep>
        </originalValue>
        <propertyOverridden>false</propertyOverridden>
      </log-rotator-property>
    </entry>
    <entry>
      <string>cleanWorkspaceRequired</string>
      <boolean-property>
        <originalValue class="boolean">true</originalValue>
        <propertyOverridden>false</propertyOverridden>
      </boolean-property>
    </entry>
    <entry>
      <string>hudson-plugins-build_timeout-BuildTimeoutWrapper</string>
      <external-property>
        <originalValue class="hudson.plugins.build_timeout.BuildTimeoutWrapper">
          <timeoutMinutes>30</timeoutMinutes>
          <failBuild>true</failBuild>
          <writingDescription>true</writingDescription>
          <timeoutPercentage>150</timeoutPercentage>
          <timeoutType>absolute</timeoutType>
          <timeoutMinutesElasticDefault>60</timeoutMinutesElasticDefault>
        </originalValue>
        <propertyOverridden>false</propertyOverridden>
        <modified>true</modified>
      </external-property>
    </entry>
    <entry>
      <string>builders</string>
      <describable-list-property>
        <originalValue class="hudson.util.DescribableList">
          <hudson.tasks.Shell>
            <command>#!/usr/bin/env bash

now=$( date --utc +%s )
TIME_STAMP=$(date --utc -d @$now +%Y-%m%d_%H%M-%S)

echo -e &quot;\n\tRunning under ID of $(whoami)\n&quot;

echo -e &quot;\n\t= = = Environment variables = = = \n&quot; &gt; env.txt
env &gt;&gt; env.txt
echo -e &quot;\n\t= = = End Environment variables = = = \n&quot; &gt;&gt; env.txt

ROOT_JOB_PATH=${HUDSON_HOME}/./jobs/

CONFIG_OUT_DIR=configs${TIME_STAMP}
mkdir -p ${CONFIG_OUT_DIR}

find ${ROOT_JOB_PATH} -maxdepth 2 -regex &quot;.*ep.*config.xml.*&quot; -exec rsync --recursive --times --safe-links --relative &apos;{}&apos; ${CONFIG_OUT_DIR}  \;

grep -r -B 1 -A 5 --exclude-dir */ep-saveConfigs --include config.xml  cleanWorkspaceRequired  ${CONFIG_OUT_DIR}/*

CONFIG_ARCHIVE_FILE=ep_configs${TIME_STAMP}.zip
zip -qr ${CONFIG_ARCHIVE_FILE} ${CONFIG_OUT_DIR}



</command>
          </hudson.tasks.Shell>
        </originalValue>
        <propertyOverridden>false</propertyOverridden>
      </describable-list-property>
    </entry>
    <entry>
      <string>jdk</string>
      <string-property>
        <originalValue class="string">(Default)</originalValue>
        <propertyOverridden>false</propertyOverridden>
      </string-property>
    </entry>
    <entry>
      <string>appointedNode</string>
      <base-property>
        <originalValue class="appointed-node-property">
          <nodeName>master</nodeName>
          <advancedAffinityChooser>true</advancedAffinityChooser>
          <canRoam>false</canRoam>
        </originalValue>
        <propertyOverridden>false</propertyOverridden>
      </base-property>
    </entry>
    <entry>
      <string>hudson-tasks-ArtifactArchiver</string>
      <external-property>
        <originalValue class="hudson.tasks.ArtifactArchiver">
          <artifacts>*.zip, *.txt</artifacts>
          <compressionType>GZIP</compressionType>
          <latestOnly>false</latestOnly>
          <autoValidateFileMask>false</autoValidateFileMask>
        </originalValue>
        <propertyOverridden>false</propertyOverridden>
        <modified>true</modified>
      </external-property>
    </entry>
    <entry>
      <string>scm</string>
      <scm-property>
        <originalValue class="hudson.scm.NullSCM"/>
        <propertyOverridden>false</propertyOverridden>
      </scm-property>
    </entry>
    <entry>
      <string>hudson-triggers-TimerTrigger</string>
      <trigger-property>
        <originalValue class="hudson.triggers.TimerTrigger">
          <spec># save &apos;ep&apos; configs everyday at 7:30 AM 
30 7 * * *</spec>
        </originalValue>
        <propertyOverridden>false</propertyOverridden>
      </trigger-property>
    </entry>
  </project-properties>
  <keepDependencies>false</keepDependencies>
  <createdBy>david_williams@us.ibm.com</createdBy>
  <creationTime>1441592944801</creationTime>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Configure:david_williams@us.ibm.com</permission>
      <permission>hudson.model.Run.Delete:david_williams@us.ibm.com</permission>
      <permission>hudson.model.Item.Build:david_williams@us.ibm.com</permission>
      <permission>hudson.model.Run.Update:david_williams@us.ibm.com</permission>
      <permission>hudson.model.Item.Workspace:anonymous</permission>
      <permission>hudson.model.Item.Workspace:david_williams@us.ibm.com</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:david_williams@us.ibm.com</permission>
      <permission>hudson.model.Item.Delete:david_williams@us.ibm.com</permission>
    </hudson.security.AuthorizationMatrixProperty>
  </properties>
  <cascadingChildrenNames class="java.util.concurrent.CopyOnWriteArraySet"/>
  <cascading-job-properties class="java.util.concurrent.CopyOnWriteArraySet">
    <string>org-hudsonci-plugins-snapshotmonitor-WatchedDependenciesProperty</string>
    <string>hudson-plugins-disk_usage-DiskUsageProperty</string>
  </cascading-job-properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <cleanWorkspaceRequired>false</cleanWorkspaceRequired>
</project>